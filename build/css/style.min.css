a,a:hover{color:#ff5a5f}.scroll-pane:focus,a:active,a:hover,input:focus,select:focus,textarea:focus{outline:0}.container,.wrapper,body{position:relative}a,nav a{text-decoration:none}.tac,h1{text-align:center}*{-webkit-box-sizing:border-box;box-sizing:border-box}.clear{clear:both}.clearfix:after{content:".";display:block;clear:both;visibility:hidden;line-height:0;height:0}.clearfix{display:inline-block}html[xmlns] .clearfix{display:block}* html .clearfix{height:1%}h1,h2,h3,h4,h5,h6{margin:0 0 15px;font-weight:700}h2{font-size:18px}h3{font-size:16px}h4{font-size:15px}h5{font-size:14px}h6{font-size:12px}p{margin:0 0 10px;padding:0}img{border:none}a:hover{text-decoration:underline}td{vertical-align:top}iframe{border:none!important}.alignleft,.fl{float:left}.alignright,.fr{float:right}.ti{text-indent:-99999px}.aligncenter{margin:0 auto;display:table}.dn{display:none}.col{color:#F85703}body,html{width:100%;height:100%;margin:0 auto;padding:0}body{font-size:14px;font-family:Roboto,sans-serif}.wrapper{min-height:100%}.container{margin:0 auto;width:1200px}.content-wrapper{padding-bottom:210px}.footer{width:100%;position:absolute;bottom:0;left:0;height:180px;margin-top:30px;border-top:1px solid #c2c2c2}.foot-nav-wrap{height:124px;width:100%;background:#0e76bc}nav ul{margin:0;padding:0;list-style:none}nav li{display:inline-block}nav a{display:block;padding:6px 12px}body{color:green;background:-webkit-linear-gradient(45deg,#ccc,#F85703);background:linear-gradient(45deg,#ccc,#F85703);padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}h1{font-size:50px;background-image:url(../img/sprite.png);background-position:-33px -26px;width:30px;height:32px;padding-left:60px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
